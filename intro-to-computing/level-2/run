#!/opt/pwn.college/python

import os
import sys

sys.path.insert(0, "/challenge/.lib")
from liblearn import render, forced_shell_run


render("1-output.md")
print()
while True:
    response = input("Linux resources are represented as: ")
    if response not in ["file", "files"]:
        print("That's not correct, try again!")
        continue
    print("That's correct!")
    break

render("2-processes.md")
print()
fd_0_path = os.readlink("/proc/self/fd/0")
command_question_answers = [
    ("first", "ls -l /proc/self/exe", "The path to the executable for that process: ", "/usr/bin/ls"),
    ("second", "cat /proc/self/maps", "The path associated with the first memory region listed: ", "/usr/bin/cat"),
    ("third", "ls -l /proc/self/fd", "The path associated with the first file listed: ", fd_0_path),
]
for nth, command, question, answer in command_question_answers:
    command, result = forced_shell_run(command, command_name=nth)
    while True:
        response = input(question)
        if response != answer:
            print("That's not correct, try again!")
            continue
        print("That's correct!")
        break

render("3-files.md", fd_0_path=fd_0_path)
std_fd_names = {
    "stdin": 0,
    "stdout": 1,
    "stderr": 2,
}
for name, fd in std_fd_names.items():
    while True:
        response = input(f"The file descriptor (fd) number for {name}: ")
        if response != str(fd):
            print("That's not correct, try again!")
            continue
        print("That's correct!")
        break
